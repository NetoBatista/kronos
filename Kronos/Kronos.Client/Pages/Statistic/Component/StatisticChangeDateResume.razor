<main class="m-3">
    <div class="d-flex gap-3 align-items-center">
        <span style="width: 200px">Selecione o ano</span>
        <select class="form-select" @bind="CurrentYear">
            @foreach(var item in Years)
            {
                <option value="@item">@item</option>
            }
        </select>
    </div>
    <div class="mt-4 mb-4 gap-3 flex-wrap d-flex justify-content-center">
        @foreach (var item in DateUtil.GetMonths())
        {
            <button @attributes="GetMonthAttributes(item.Key)" style="width: 120px" @onclick="() => OnClickMonth(item.Key)">
                @item.Value
            </button>
        }
    </div>

    <div class="modal-footer d-flex gap-2">
        <button type="button" class="btn btn-outline-secondary" @onclick="DialogProvider.CloseDialog">Cancelar</button>
        <button type="button" class="btn btn-primary" @onclick="OnClickConfirm">Confirmar</button>
    </div>
</main>

@code {
    [Inject]
    private IDialogProvider DialogProvider { get; set; } = default!;
    
    [Parameter]
    public EventCallback<DateTime> SuccessCallback { get; set; } = default!;
    [Parameter]
    public DateTime SelectedDate { get; set; }
    private int Month { get; set; } = 1;
    private int CurrentYear { get; set; }
    private List<int> Years { get; set; } = [];

    protected override void OnInitialized()
    {
        CurrentYear = SelectedDate.Year;
        Month = SelectedDate.Month;
        Years.Clear();
        for (int year = DateTime.UtcNow.Year; year >= 2000; year--)
        {
            Years.Add(year);
        }
    }
    
    private Dictionary<string, object> GetMonthAttributes(int index)
    {
        if (Month == index)
        {
            return new Dictionary<string, object>
            {
                { "class", "btn btn-primary" },
            };
        }

        return new Dictionary<string, object>
        {
            { "class", "btn btn-outline-secondary" },
        };
    }

    private void OnClickMonth(int index)
    {
        Month = index;
    }

    private async Task OnClickConfirm()
    {
        var response = new DateTime(CurrentYear, Month, 1);
        await SuccessCallback.InvokeAsync(response);
        DialogProvider.CloseDialog();
    }
}
<div>
    <div class="modal-body">
        <div class="mb-3">
            <label class="form-label">Nome da aplicação</label>
            <input type="email" class="form-control" disabled @bind="Request.Name" maxlength="100">
        </div>
        <div class="mb-3">
            <label class="form-label">Health check (opcional)</label>
            <input type="email" class="form-control" disabled placeholder="Ex: http://kronos.com.br/ping" @bind="Request.HealthCheck" maxlength="1000">
        </div>
        <div class="alert alert-info d-grid" role="alert">
            <span>
                Tem certeza que deseja remover essa aplicação? 
            </span>
            <span>
                Essa ação não é reversível e todos os logs serão deletados
            </span>
        </div>
    </div>
    @if (IsLoading)
    {
        <div class="ms-3 me-3">
            <LoadingComponent IsInLineProgress="true"></LoadingComponent>
        </div>
    }
    <div class="modal-footer d-flex gap-2">
        <button type="button" disabled="@IsLoading" class="btn btn-outline-secondary" @onclick="DialogProvider.CloseDialog">Cancelar</button>
        <button type="button" disabled="@IsLoading" class="btn btn-primary" @onclick="OnClickRemoveApplication">Confirmar</button>
    </div>
</div>

@code {
    [Inject]
    private DialogProvider DialogProvider { get; set; } = default!;

    [Parameter]
    public EventCallback SuccessCallback { get; set; } = default!;

    private readonly ApplicationHandler _applicationHandle = new();

    private bool IsLoading { get; set; }

    [Parameter]
    public ApplicationResponseDTO Request { get; set; } = default!;

    private async Task OnClickRemoveApplication()
    {
        IsLoading = true;
        await _applicationHandle.Delete(Request.Id);
        IsLoading = false;
        await SuccessCallback.InvokeAsync();
        DialogProvider.CloseDialog();
    }
}

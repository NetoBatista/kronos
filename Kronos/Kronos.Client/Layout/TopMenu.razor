<div class="d-flex mb-3">
    <div>
        <b class="fs-4">Kronos</b>
    </div>
    <div class="ms-4">
        <button class="btn @ClassHome" @onclick="OnClickHome">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-house" viewBox="0 0 18 18">
                <path d="M8.707 1.5a1 1 0 0 0-1.414 0L.646 8.146a.5.5 0 0 0 .708.708L2 8.207V13.5A1.5 1.5 0 0 0 3.5 15h9a1.5 1.5 0 0 0 1.5-1.5V8.207l.646.647a.5.5 0 0 0 .708-.708L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293zM13 7.207V13.5a.5.5 0 0 1-.5.5h-9a.5.5 0 0 1-.5-.5V7.207l5-5z" />
            </svg>
            <span>Início</span>
        </button>

        <button class="btn @ClassApplication ms-2" @onclick="OnClickApplication">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-app" viewBox="0 0 18 18">
                <path d="M11 2a3 3 0 0 1 3 3v6a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3V5a3 3 0 0 1 3-3zM5 1a4 4 0 0 0-4 4v6a4 4 0 0 0 4 4h6a4 4 0 0 0 4-4V5a4 4 0 0 0-4-4z" />
            </svg>
            <span>Aplicações</span>
        </button>

        <button class="btn @ClassHealthCheck ms-2" @onclick="OnClickHealthCheck">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-heart-pulse" viewBox="0 0 18 18">
                <path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053.918 3.995.78 5.323 1.508 7H.43c-2.128-5.697 4.165-8.83 7.394-5.857q.09.083.176.171a3 3 0 0 1 .176-.17c3.23-2.974 9.522.159 7.394 5.856h-1.078c.728-1.677.59-3.005.108-3.947C13.486.878 10.4.28 8.717 2.01zM2.212 10h1.315C4.593 11.183 6.05 12.458 8 13.795c1.949-1.337 3.407-2.612 4.473-3.795h1.315c-1.265 1.566-3.14 3.25-5.788 5-2.648-1.75-4.523-3.434-5.788-5" />
                <path d="M10.464 3.314a.5.5 0 0 0-.945.049L7.921 8.956 6.464 5.314a.5.5 0 0 0-.88-.091L3.732 8H.5a.5.5 0 0 0 0 1H4a.5.5 0 0 0 .416-.223l1.473-2.209 1.647 4.118a.5.5 0 0 0 .945-.049l1.598-5.593 1.457 3.642A.5.5 0 0 0 12 9h3.5a.5.5 0 0 0 0-1h-3.162z" />
            </svg>
            <span>HealthCheck</span>
        </button>

        <button class="btn @ClassStatistic ms-2" @onclick="OnClickStatistic">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-graph-up" viewBox="0 0 18 18">
                <path fill-rule="evenodd" d="M0 0h1v15h15v1H0zm14.817 3.113a.5.5 0 0 1 .07.704l-4.5 5.5a.5.5 0 0 1-.74.037L7.06 6.767l-3.656 5.027a.5.5 0 0 1-.808-.588l4-5.5a.5.5 0 0 1 .758-.06l2.609 2.61 4.15-5.073a.5.5 0 0 1 .704-.07" />
            </svg>
            <span>Estatística</span>
        </button>

        <button class="btn @ClassReport ms-2" @onclick="OnClickReport">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-file-text" viewBox="0 0 18 18">
                <path d="M5 4a.5.5 0 0 0 0 1h6a.5.5 0 0 0 0-1zm-.5 2.5A.5.5 0 0 1 5 6h6a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5M5 8a.5.5 0 0 0 0 1h6a.5.5 0 0 0 0-1zm0 2a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1z" />
                <path d="M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2zm10-1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1" />
            </svg>
            <span>Relatório</span>
        </button>
    </div>
</div>

@code {
    [Inject]
    protected NavigationManager NavigationManager { get; set; } = default!;

    private string ClassPrimaryButton = "btn-primary";

    private string ClassOutlinedSecondaryButton = "btn-outline-secondary";

    private string ClassHome => GetClassButton("");

    private string ClassApplication => GetClassButton("application");

    private string ClassHealthCheck => GetClassButton("healthcheck");

    private string ClassStatistic => GetClassButton("statistic");

    private string ClassReport => GetClassButton("report");

    private string CurrentUrl { get; set; } = string.Empty;

    protected override void OnInitialized()
    {
        CurrentUrl = NavigationManager.Uri.Replace(NavigationManager.BaseUri, "");
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        CurrentUrl = e.Location.Replace(NavigationManager.BaseUri, "");
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

    private string GetClassButton(string url)
    {
        if (CurrentUrl == url)
        {
            return ClassPrimaryButton;
        }
        return ClassOutlinedSecondaryButton;
    }

    private void OnClickHome()
    {
        RedirectTo("/");
    }

    private void OnClickApplication()
    {
        RedirectTo("/application");
    }

    private void OnClickHealthCheck()
    {
        RedirectTo("/healthcheck");
    }

    private void OnClickStatistic()
    {
        RedirectTo("/statistic");
    }

    private void OnClickReport()
    {
        RedirectTo("/report");
    }

    private void RedirectTo(string path)
    {
        NavigationManager.NavigateTo(path);
    }
}